{% extends '::base.html.twig' %}

{% block content_title %}Theory <small>Notes references</small>{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-md-12">
            <note-selector></note-selector>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <guitar-neck-widget></guitar-neck-widget>
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            <canvas id="note-references"></canvas>
        </div>

        <div class="col-md-7">
            <note-list></note-list>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">
        $(document).ready(function () {
            var notes = {{ entities|json_encode|raw }};

            var canvas = document.getElementById('note-references');
            var $canvas = $(canvas);

            canvas.width  = $canvas.parent().width();
            canvas.height = $canvas.parent().width();

            var context = canvas.getContext('2d');
            var centerX = canvas.width / 2;
            var centerY = canvas.height / 2;
            var radius = Math.round((canvas.width / 8) * 3);

            context.beginPath();
            context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);

            context.lineWidth = 40;
            context.strokeStyle = 'rgba(0, 0, 0, 0.25)';
            context.stroke();

            // Draw Notes
            var angleStep = (360 / notes.length) * (2.0 * Math.PI) / 360.0;
            var angle = - Math.PI / 2;
            for (var i = 0; i < notes.length; i++) {
                if (notes[i].accidental) {
                    drawAlteration(angle, notes[i]);
                } else {
                    drawNote(angle, notes[i])
                }

                angle += angleStep;
            }

            function drawAlteration(angle, note)
            {
                var startX = centerX + (radius - 30) * Math.cos(angle);
                var startY = centerY + (radius - 30) * Math.sin(angle);

                var endX = centerX + (radius + 30) * Math.cos(angle);
                var endY = centerY + (radius + 30) * Math.sin(angle);

                context.beginPath();
                context.moveTo(startX, startY);
                context.lineTo(endX, endY);

                context.lineWidth = 2;
                context.strokeStyle = 'rgba(0, 0, 0, 0.5)';

                context.stroke();

                context.beginPath();
                context.font="bold 12pt Calibri";
                context.fillText(notes[i].sharpName, endX,endY);
            }

            function drawNote(angle, note)
            {
                var startX = centerX + (radius - 30) * Math.cos(angle);
                var startY = centerY + (radius - 30) * Math.sin(angle);

                var endX = centerX + (radius + 30) * Math.cos(angle);
                var endY = centerY + (radius + 30) * Math.sin(angle);

                context.beginPath();
                context.moveTo(startX, startY);
                context.lineTo(endX, endY);

                context.lineWidth = 5;
                context.strokeStyle = 'rgba(0, 0, 0, 0.5)';

                context.stroke();

                context.beginPath();
                context.font="bold 12pt Calibri";
                context.fillText(notes[i].sharpName, endX,endY);
            }

            function drawInterval()
            {

            }
        });
    </script>
{% endblock %}